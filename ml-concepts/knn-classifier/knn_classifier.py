# -*- coding: utf-8 -*-
"""knn-classifier.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MRK3x-tj2ut06SpE7onw1n1AIkwdDFuS
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.preprocessing import MinMaxScaler
from sklearn.metrics import accuracy_score

def load_and_prepare_data(df):
    df.Education.replace({'Bachelors': 1, 'Masters': 2, 'PHD': 3}, inplace=True)
    df.Gender.replace({'Male': 0, 'Female': 1}, inplace=True)
    df.EverBenched.replace({'Yes': 1, 'No': 0}, inplace=True)
    return df

def train_knn_model(X_train, y_train, n_neighbors=3):
    knn_model = KNeighborsClassifier(n_neighbors=n_neighbors)
    knn_model.fit(X_train, y_train)
    return knn_model

def evaluate_model(model, X_test, y_test):
    y_pred = model.predict(X_test)
    accuracy = accuracy_score(y_test, y_pred)
    print('Accuracy Score - ', accuracy)

def main(df):
    # Prepare the data
    df = load_and_prepare_data(df)
    X = df.drop(columns=['City', 'LeaveOrNot'], axis=1)
    y = df.LeaveOrNot

    # Split the data
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=0)

    # Scale the features
    scaler = MinMaxScaler()
    X_train_scaled = scaler.fit_transform(X_train)
    X_test_scaled = scaler.transform(X_test)

    # Train the KNN model
    knn_model = train_knn_model(X_train_scaled, y_train)

    # Evaluate the model
    evaluate_model(knn_model, X_test_scaled, y_test)

    def predict():
      # Example Input
      input_data = [1,2018,3,34,0,0,0]

      input_array = np.asarray(input_data).reshape(1,-1)

      prediction = knn_model.predict(input_array)
      print('Predicted Value is',prediction,'\nPrediction : ')

      if (prediction[0] == 0):
        print('The person will not leave the company')
      else:
        print('The person will leave the company')

    predict()

if __name__ == "__main__":
    df = pd.read_csv('datasets/Employee.csv')
    main(df)